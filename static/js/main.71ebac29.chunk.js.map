{"version":3,"sources":["App.module.css","Components/Minutes/Minutes.module.css","Components/Speeds/Speed.module.css","Components/Timer/Timer.module.css","Components/Speeds/Speed.tsx","Components/TextInformation/TextInformation.tsx","Components/Timer/Timer.tsx","Components/Minutes/Minutes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Speed","props","backgroundColor","selected","color","Button","variant","onClick","style","className","SpeedButton","speed","TextInformation","message","counter","showMessage","minutes","AnimatedComponent","styled","span","keyframes","Timer","timer","Date","toISOString","substr","fontSize","IconButton","PlayOrPause","paused","Minutes","TextField","TextInput","value","onChange","onChangeHandler","placeholder","width","marginLeft","marginRight","startTimer","App","useState","setMinutes","setCounter","setPaused","setValue","setSpeed","speedNumber","useEffect","interval","setInterval","clearInterval","changeSpeed","e","currentTarget","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71ebac29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__ALpp7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Minutes\":\"Minutes_Minutes__15Sml\",\"TextInput\":\"Minutes_TextInput__2IT7M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SpeedButton\":\"Speed_SpeedButton__nyDsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timer\":\"Timer_Timer__Aazdy\"};","import React from 'react';\r\nimport {Button} from \"@material-ui/core\";\r\nimport style from './Speed.module.css'\r\n\r\ntype SpeedPropsType = {\r\n    onClick: () => void;\r\n    speed: string;\r\n    selected: boolean;\r\n}\r\n\r\nexport const Speed = (props: SpeedPropsType) => {\r\n    const backgroundColor = props.selected ? \"grey\" : \"white\";\r\n    const color = props.selected ? \"white\" : \"black\";\r\n\r\n    return <>\r\n        <Button  variant=\"outlined\" onClick={props.onClick} style={{color: color, backgroundColor: backgroundColor}} className={style.SpeedButton}>\r\n            {props.speed}\r\n        </Button>\r\n    </>\r\n};","import React, {ChangeEvent, useState} from 'react';\r\n\r\ntype TextInformationPropsType = {\r\n    counter: number,\r\n    minutes: number\r\n}\r\n\r\nexport const TextInformation = (props: TextInformationPropsType) => {\r\n    let message = '';\r\n    (props.counter < 1) ? message = 'Timeâ€™s up!' : message = 'More than halfway there!';\r\n\r\n    let showMessage = props.counter < (props.minutes * 60 / 2)\r\n    return <>\r\n        {showMessage && <h1>{message}</h1>}\r\n\r\n    </>\r\n};","import React from 'react';\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport styled, {keyframes} from 'styled-components';\r\nimport style from './Timer.module.css'\r\n\r\nfunction blinkingEffect() {\r\n    return keyframes`\r\n    50% {\r\n      opacity: 0;\r\n    }\r\n  `;\r\n}\r\n\r\nconst AnimatedComponent = styled.span`\r\n  animation: ${blinkingEffect} 1s linear infinite;\r\n`\r\ntype TimerPropsType = {\r\n    counter: number,\r\n    paused: boolean,\r\n    PlayOrPause: () => void\r\n}\r\n\r\nexport const Timer = (props: TimerPropsType) => {\r\n    const color = (props.counter < 20 && props.counter > 0) ? \"red\" : \"black\";\r\n    const timer = new Date(props.counter * 1000).toISOString().substr(14, 5)\r\n    return <div className={style.Timer}>\r\n                <span style={{color: color, fontSize: '80px'}}>\r\n                    {(props.counter < 10 && props.counter > 0) ?\r\n                        <AnimatedComponent> {timer}</AnimatedComponent> : timer}\r\n                </span>\r\n        <IconButton color=\"primary\"   onClick={props.PlayOrPause}>\r\n            {props.paused ? <PlayCircleOutlineIcon/> : <PauseCircleOutlineIcon/>}\r\n        </IconButton>\r\n    </div>\r\n\r\n};","import React, {ChangeEvent} from 'react';\r\nimport {Button, TextField} from \"@material-ui/core\";\r\nimport style from './Minutes.module.css'\r\n\r\n\r\ntype MinutesPropsType = {\r\n    startTimer: () => void,\r\n    onChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void,\r\n    value: string | number\r\n}\r\n\r\nexport const Minutes = (props: MinutesPropsType) => {\r\n    return <div className={style.Minutes}>\r\n        <span>Countdown:</span>\r\n        <TextField variant=\"outlined\"\r\n                   className={style.TextInput}\r\n                   value={props.value}\r\n                   onChange={props.onChangeHandler}\r\n                   placeholder=\"(Min)\"\r\n                   style={{\r\n                       width: '100px',\r\n                       marginLeft: '15px',\r\n                       marginRight: '15px',\r\n                   }}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={props.startTimer}>\r\n            Start\r\n        </Button>\r\n    </div>\r\n};","import React, {ChangeEvent, useEffect, useState} from 'react';\nimport './App.module.css';\nimport {Speed} from './Components/Speeds/Speed';\nimport {TextInformation} from \"./Components/TextInformation/TextInformation\";\nimport {Timer} from \"./Components/Timer/Timer\";\nimport {Minutes} from \"./Components/Minutes/Minutes\";\nimport style from './App.module.css'\n\n\nfunction App() {\n\n\n    const [minutes, setMinutes] = useState(0);\n    const [counter, setCounter] = useState(minutes * 60);\n    const [paused, setPaused] = useState(true);\n    const [value, setValue] = useState<number | string>('');\n    const [speed, setSpeed] = useState(1000);\n\n\n    const speedNumber = [1000, 500, 100];\n\n    const start = () => {\n        setMinutes(+value);\n        setCounter(+value * 60);\n        setPaused(false);\n    };\n\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setValue(+e.currentTarget.value)\n    }\n\n    const PlayOrPause = () => {\n        setPaused(!paused);\n    };\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (!paused) {\n                setCounter((counter) => (counter > 0 ? counter - 1 : 0));\n            }\n        }, speed);\n        return () => clearInterval(interval);\n    }, [paused, speed, minutes]);\n\n    useEffect(() => {\n        if (counter < 1) {\n            setPaused(true);\n        }\n    }, [counter]);\n\n    const changeSpeed = (speed: number) => {\n        setSpeed(speed);\n    };\n\n\n    return (\n        <div className={style.App}>\n            <Minutes startTimer={start} value={value} onChangeHandler={onChangeHandler}/>\n            <TextInformation counter={counter} minutes={minutes}/>\n            <Timer counter={counter} paused={paused} PlayOrPause={PlayOrPause}/>\n            <div>\n                <Speed onClick={() => changeSpeed(speedNumber[0])} speed={'1X'} selected={speed === speedNumber[0]}/>\n                <Speed onClick={() => changeSpeed(speedNumber[1])} speed={'1.5X'} selected={speed === speedNumber[1]}/>\n                <Speed onClick={() => changeSpeed(speedNumber[2])} speed={'2X'} selected={speed === speedNumber[2]}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}